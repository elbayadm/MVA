name: "Noisy_P1"
#--------------------
# Loading bases
#--------------------
# Base TRAIN

layer {
  name: "train_im"
  type: "Data"
  top: "data"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
    #mirror: false
    #crop_size: 64
  }
  data_param {
    source: "/workdir/elbayadm/lmdb/noisy/images"
    batch_size: 1
    backend: LMDB
  }
}

layer {
  name: "train_labels"
  type: "Data"
  top: "label"
  include {
    phase: TEST
  }
  data_param {
    source: "/workdir/elbayadm/lmdb/noisy/bstrap5_balanced_labels_30_30"
    batch_size: 1
    backend: LMDB
  }
}

#--------------------
# 1st layers serie
#--------------------

# CONV1
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param { lr_mult: 1  decay_mult: 0 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  } 
}

# ReLU1
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}

# POOL1
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}


#--------------------
# 2nd layers serie
#--------------------
# CONV2
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param { lr_mult: 1  decay_mult: 0 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  } 
}

# ReLU2
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}

# POOL2
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

#--------------------
# 3rd layers serie
#--------------------

# CONV3
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param { lr_mult: 1  decay_mult: 0 }
  param { lr_mult: 2  decay_mult: 0 }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

# ReLU3
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}

# POOL3
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}



#----------------------------------
# Fully connected and final layers
#----------------------------------

# INNER PRODUCT 1
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  param { lr_mult: 1  decay_mult: 0 }
  param { lr_mult: 2  decay_mult: 0 }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

# DROPOUT 1
layer {
  name: "drop1"
  type: "Dropout"
  bottom: "ip1"
  top: "ip1"
  dropout_param {
    dropout_ratio: 0.5
  }
}

# ReLU 4

layer {
  name: "relu4"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}

# INNER PRODUCT 2
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param { lr_mult: 1  decay_mult: 0 }
  param { lr_mult: 2  decay_mult: 0 }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}


# DROPOUT 2
layer {
  name: "drop2"
  type: "Dropout"
  bottom: "ip2"
  top: "ip2"
  dropout_param {
    dropout_ratio: 0.5
  }
}

#Prob
layer{
 name:"prob"
 type:"Softmax"
 bottom: "ip2"
 top: "prob"
}
#Loss:
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
  loss_param {
    ignore_label: -1
  }
}



